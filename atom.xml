<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[fycsb]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://fycsb.github.io/"/>
  <updated>2016-03-29T12:57:23.678Z</updated>
  <id>http://fycsb.github.io/</id>
  
  <author>
    <name><![CDATA[fycsb]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[填坑小记]]></title>
    <link href="http://fycsb.github.io/2016/03/29/pit_gprinter_sdk/"/>
    <id>http://fycsb.github.io/2016/03/29/pit_gprinter_sdk/</id>
    <published>2016-03-29T13:00:55.447Z</published>
    <updated>2016-03-29T12:57:23.678Z</updated>
    <content type="html"><![CDATA[<h3 id="起因">起因</h3><p>半年前，接手了公司的打印机的sdk，用起来非常的复杂，而且有的地方返回值不正确，阻塞UI线程等，于是乎就挖了一个坑，要重新撸一个，半年后终于填了。。。</p>
<h3 id="导入jar包">导入jar包</h3><p>先导入jar包，把jbsdk放到lib目录即可</p>
<h3 id="绑定服务">绑定服务</h3><p>由于一台手机上面可能安装了多个打印应用，这样有可能多个app去操作一个打印机，而不用断开连接的繁琐操作，所以使用到了一个打印服务<strong>JBPrintService</strong><br>首先当然是在AndroidManifest.xml声明这个服务。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">service</span></span><br><span class="line">    <span class="attribute">android:name</span>=<span class="value">"com.jb.sdk.service.JbPrintService"</span></span><br><span class="line">    <span class="attribute">android:exported</span>=<span class="value">"true"</span></span><br><span class="line">    <span class="attribute">android:process</span>=<span class="value">":remote"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.DEFAULT"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"com.jb.sdk.service.JbPrintService"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">service</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>然后在Activity中<strong>绑定服务</strong>,并且可以把<strong>连接状态改变的回调</strong>以及<strong>查询打印机状态的回调</strong>一起注册了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> JBService mService;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ServiceConnection mServiceConnection = <span class="keyword">new</span> ServiceConnection(&#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"========onServiceConnected======="</span>);</span><br><span class="line">        mService = JBService.Stub.asInterface(service);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mService.registerConnectCallback(<span class="keyword">new</span> ConnectCallback());</span><br><span class="line">            mService.registerPrinterStatusCallback(<span class="keyword">new</span> QueryPrinterRealStatus());</span><br><span class="line">            Log.d(TAG, <span class="string">"绑定服务成功了"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"========onServiceDisconnected======="</span>);</span><br><span class="line">        mService = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    <span class="comment">/* 绑定服务，绑定成功后调用ServiceConnection中的onServiceConnected方法 */</span></span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, JbPrintService.class);</span><br><span class="line">    bindService(intent, mServiceConnection, BIND_AUTO_CREATE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="使用服务">使用服务</h3><p>使用之前先说说这个服务提供的接口</p>
<h5 id="打印机连接状态改变的接口">打印机连接状态改变的接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">JBPrinterConnectCallback</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onConnecting</span><span class="params">(<span class="keyword">int</span> mId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onDisconnect</span><span class="params">(<span class="keyword">int</span> mId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onConnected</span><span class="params">(<span class="keyword">int</span> mId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="查询打印机实时状态接口">查询打印机实时状态接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">JBPrinterRealStatusCallback</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onPrinterRealStatus</span><span class="params">(<span class="keyword">int</span> mId ,<span class="keyword">int</span> status,<span class="keyword">int</span> requestCode)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="打印服务提供的相关操作接口">打印服务提供的相关操作接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">JBService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">openPort</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> portType, String portName, <span class="keyword">int</span> portNumber)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">closePort</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printeTestPage</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">queryPrinterStatus</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">long</span> timeout, <span class="keyword">int</span> requestCode)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendReceiptCommand</span><span class="params">(<span class="keyword">int</span> id,in <span class="keyword">byte</span>[] receiptByte)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendLabelCommand</span><span class="params">(<span class="keyword">int</span> id,in <span class="keyword">byte</span>[] labelByte)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getPrinterConnectStatus</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getPrinterCommandType</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">registerConnectCallback</span><span class="params">(JBPrinterConnectCallback callback)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">registerPrinterStatusCallback</span><span class="params">(JBPrinterRealStatusCallback callback)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br></p>
<h4 id="打开关闭端口">打开关闭端口</h4><ul>
<li><p>打开蓝牙端口进行连接</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//id为打印服务操作的打印机的id，最大可以操作3台</span></span><br><span class="line">mService.openPort(id, PortParameter.BLUETOOTH,<span class="string">"FF:00:1D:4D:4A"</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开网口/wifi端口进行连接 （具体的ip以及端口看打印机的设置了，这里使用了默认的ip以及端口）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//id为打印服务操作的打印机的id，最大可以操作3台</span></span><br><span class="line">mService.openPort(id, PortParameter.ETHERNET, <span class="string">"192.168.123.100"</span>, <span class="number">9100</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开USB端口进行连接</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//id为打印服务操作的打印机的id，最大可以操作3台</span></span><br><span class="line">mService.openPort(id, PortParameter.USB,<span class="string">"/dev/bus/usb/001/003"</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>打开成功后，前面提到的<strong>打印机连接状态改变的接口</strong>就有用了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ConnectCallback</span> <span class="keyword">extends</span> <span class="title">JBPrinterConnectCallback</span>.<span class="title">Stub</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="annotation">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConnecting</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">           LogInfo.d(TAG, <span class="string">"--------onConnecting----------"</span>);</span><br><span class="line">           runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">               <span class="annotation">@Override</span></span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                   setTitle(<span class="string">"CONNTECING"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="annotation">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDisconnect</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">           LogInfo.d(TAG, <span class="string">"--------onDisconnect----------"</span>);</span><br><span class="line">           runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">               <span class="annotation">@Override</span></span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                   setTitle(<span class="string">"DISCONNECT"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="annotation">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConnected</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">           LogInfo.d(TAG, <span class="string">"--------onConnected----------"</span>);</span><br><span class="line">           runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">               <span class="annotation">@Override</span></span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                   setTitle(<span class="string">"CONNECTED"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<p>logcat中的输出是这样的：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">03</span>-<span class="number">29</span> <span class="number">19</span>:<span class="number">23</span>:<span class="number">23.209</span> <span class="number">23094</span>-<span class="number">23094</span>/com.gprinter.sample D/MainActivity: --------onConnecting----------</span><br><span class="line"><span class="number">03</span>-<span class="number">29</span> <span class="number">19</span>:<span class="number">23</span>:<span class="number">24.560</span> <span class="number">23094</span>-<span class="number">5191</span>/com.gprinter.sample D/MainActivity: --------onConnected----------</span><br></pre></td></tr></table></figure></p>
<p>此时已经连接成功了。接着我们去看看<strong>JBService</strong>中提供的closePort操作<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mService.closePort(id);</span><br></pre></td></tr></table></figure></p>
<p>logcat 得到的输出如下<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">03</span>-<span class="number">29</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">26.298</span> <span class="number">23094</span>-<span class="number">23094</span>/com.gprinter.sample D/MainActivity: --------onDisconnect----------</span><br></pre></td></tr></table></figure></p>
<p><br></p>
<h4 id="获取打印机的命令类型">获取打印机的命令类型</h4><p>由于有的打印机有票据模式与标签模式两种模式，所以我们使用打印机的时候有时候并不知道打印机处于哪种模式，我们可以这样来查看一下。<br>连接打印机成功后，我们只需要这样就可以得到打印机的命令类型<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> type = mService.getPrinterCommandType(mPrinterId);</span><br><span class="line">Log.d(TAG, type == GpDevice.UNKNOWN_COMMAND ? <span class="string">"未知类型"</span> : (type == GpDevice.RECEIPT_COMMAND ? <span class="string">"票据模式"</span> :</span><br><span class="line">        <span class="string">"标签模式"</span>));</span><br></pre></td></tr></table></figure></p>
<p><br></p>
<h4 id="获取打印机的连接状态">获取打印机的连接状态</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> connectStatus = mService.getPrinterConnectStatus(mPrinterId);</span><br><span class="line"><span class="keyword">if</span> (connectStatus == GpPort.STATE_CONNECTED) &#123;</span><br><span class="line">    Log.d(TAG, <span class="string">"已连接"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (connectStatus == GpPort.STATE_CONNECTING) &#123;</span><br><span class="line">    Log.d(TAG, <span class="string">"连接中"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (connectStatus == GpPort.STATE_NONE) &#123;</span><br><span class="line">    Log.d(TAG, <span class="string">"未连接"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br></p>
<h4 id="打印测试页">打印测试页</h4><p>连接成功后，我们可以去尝试着打印一下测试页，也是很简单的操作。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mService.printeTestPage(mPrinterId);</span><br></pre></td></tr></table></figure></p>
<p>简单吧。。。</p>
<h4 id="查询打印机实时状态">查询打印机实时状态</h4><p>先看看这个方法的声明<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// id为服务操作的对应打印机索引，timeout为查询的超时时间，建议500ms左右，requestCode为请求码，回调后去处理相应操作</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queryPrinterStatus</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">long</span> timeout, <span class="keyword">int</span> requestCode)</span></span>;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>    REQUEST_TOAST_PRINTER_STATUS = <span class="number">0x01</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryPrinterRealStatus</span> <span class="keyword">extends</span> <span class="title">JBPrinterRealStatusCallback</span>.<span class="title">Stub</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPrinterRealStatus</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id, <span class="keyword">int</span> status, <span class="keyword">int</span> requestCode)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_TOAST_PRINTER_STATUS:</span><br><span class="line">                showPrinterStatus(id, status);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showPrinterStatus</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">    String str;</span><br><span class="line">    <span class="keyword">if</span> (status == GpDevice.STATE_NO_ERR) &#123;</span><br><span class="line">        str = <span class="string">"打印机正常"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        str = <span class="string">"打印机 "</span>;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">byte</span>) (status &amp; GpDevice.STATE_OFFLINE) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str += <span class="string">"脱机"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">byte</span>) (status &amp; GpDevice.STATE_PAPER_ERR) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str += <span class="string">"缺纸"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">byte</span>) (status &amp; GpDevice.STATE_COVER_OPEN) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str += <span class="string">"打印机开盖"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">byte</span>) (status &amp; GpDevice.STATE_ERR_OCCURS) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str += <span class="string">"打印机出错"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">byte</span>) (status &amp; GpDevice.STATE_TIMES_OUT) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str += <span class="string">"查询超时"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> String statusStr = str;</span><br><span class="line">    runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            Toast.makeText(getApplicationContext(),</span><br><span class="line">                    <span class="string">"打印机："</span> + id + <span class="string">" 状态："</span> + statusStr, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="打印票据的小例子">打印票据的小例子</h3><p>该库的<strong>ReceiptCommand</strong>类封装了常用的票据命令，你可以使用它来打印出丰富的格式<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printReceiptSample</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       ReceiptCommand esc = <span class="keyword">new</span> ReceiptCommand();</span><br><span class="line">       esc.addPrintAndFeedLines((<span class="keyword">byte</span>) <span class="number">3</span>);</span><br><span class="line">       esc.addSelectCodePage(ReceiptCommand.CODEPAGE.UYGUR);</span><br><span class="line">       esc.addSelectJustification(ReceiptCommand.JUSTIFICATION.CENTER);<span class="comment">// 设置打印居中</span></span><br><span class="line">       esc.addSelectPrintModes(ReceiptCommand.FONT.FONTA, ReceiptCommand.ENABLE.OFF, ReceiptCommand.ENABLE.ON,</span><br><span class="line">               ReceiptCommand.ENABLE.ON, ReceiptCommand.ENABLE.OFF);<span class="comment">// 设置为倍高倍宽</span></span><br><span class="line">       esc.addText(<span class="string">"Sample\n"</span>); <span class="comment">// 打印文字</span></span><br><span class="line">       esc.addPrintAndLineFeed();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 打印文字 */</span></span><br><span class="line">       esc.addSelectPrintModes(ReceiptCommand.FONT.FONTA, ReceiptCommand.ENABLE.OFF, ReceiptCommand.ENABLE.OFF,</span><br><span class="line">               ReceiptCommand.ENABLE.OFF, ReceiptCommand.ENABLE.OFF);<span class="comment">// 取消倍高倍宽</span></span><br><span class="line">       esc.addSelectJustification(ReceiptCommand.JUSTIFICATION.LEFT);<span class="comment">// 设置打印左对齐</span></span><br><span class="line">       esc.addText(<span class="string">"Print text\n"</span>); <span class="comment">// 打印文字</span></span><br><span class="line">       esc.addText(<span class="string">"Welcome to use Gprinter!\n"</span>); <span class="comment">// 打印文字</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 打印繁体中文 需要打印机支持繁体字库 */</span></span><br><span class="line">       String message = <span class="string">"佳博票據打印機\n"</span>;</span><br><span class="line">       <span class="comment">// esc.addText(message,"BIG5");</span></span><br><span class="line">       esc.addText(message, <span class="string">"GB2312"</span>);</span><br><span class="line">       esc.addPrintAndLineFeed();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 绝对位置 具体详细信息请查看GP58编程手册*/</span></span><br><span class="line">       esc.addText(<span class="string">"你好啊"</span>);</span><br><span class="line">       esc.addSetHorAndVerMotionUnits((<span class="keyword">byte</span>) <span class="number">7</span>, (<span class="keyword">byte</span>) <span class="number">0</span>);</span><br><span class="line">       esc.addSetAbsolutePrintPosition((<span class="keyword">short</span>) <span class="number">6</span>);</span><br><span class="line">       esc.addText(<span class="string">"你好啊"</span>);</span><br><span class="line">       esc.addSetAbsolutePrintPosition((<span class="keyword">short</span>) <span class="number">10</span>);</span><br><span class="line">       esc.addText(<span class="string">"你好啊"</span>);</span><br><span class="line">       esc.addPrintAndLineFeed();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 打印图片 -&gt; 建议放在一个任务线程去执行，图片处理比较耗时 */</span></span><br><span class="line">       esc.addText(<span class="string">"Print bitmap!\n"</span>); <span class="comment">// 打印文字</span></span><br><span class="line">       Bitmap b = BitmapFactory.decodeResource(getResources(), R.mipmap.bb);</span><br><span class="line">       esc.addRastBitImage(b, b.getWidth(), <span class="number">0</span>, GpUtils.ALGORITHM_TEXTMODE); <span class="comment">// 打印图片</span></span><br><span class="line">       <span class="comment">/* 打印一维条码 */</span></span><br><span class="line">       esc.addText(<span class="string">"Print code128\n"</span>); <span class="comment">// 打印文字</span></span><br><span class="line">       esc.addSelectPrintingPositionForHRICharacters(ReceiptCommand.HRI_POSITION.BELOW);<span class="comment">// 设置条码可识别字符位置在条码下方</span></span><br><span class="line">       esc.addSetBarcodeHeight((<span class="keyword">byte</span>) <span class="number">60</span>); <span class="comment">// 设置条码高度为60点</span></span><br><span class="line">       esc.addSetBarcodeWidth((<span class="keyword">byte</span>) <span class="number">1</span>); <span class="comment">// 设置条码单元宽度为1</span></span><br><span class="line">       esc.addCODE128(esc.genCodeB(<span class="string">"Gprinter"</span>)); <span class="comment">// 打印Code128码</span></span><br><span class="line">       esc.addPrintAndLineFeed();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/*</span><br><span class="line">        * QRCode命令打印 此命令只在支持QRCode命令打印的机型才能使用。 在不支持二维码指令打印的机型上，则需要发送二维条码图片</span><br><span class="line">        */</span></span><br><span class="line">       esc.addText(<span class="string">"Print QRcode\n"</span>); <span class="comment">// 打印文字</span></span><br><span class="line">       esc.addSelectErrorCorrectionLevelForQRCode((<span class="keyword">byte</span>) <span class="number">0x31</span>); <span class="comment">//设置纠错等级</span></span><br><span class="line">       esc.addSelectSizeOfModuleForQRCode((<span class="keyword">byte</span>) <span class="number">3</span>);<span class="comment">//设置qrcode模块大小</span></span><br><span class="line">       esc.addStoreQRCodeData(<span class="string">"www.gainscha.cn"</span>);<span class="comment">//设置qrcode内容</span></span><br><span class="line">       esc.addPrintQRCode();<span class="comment">//打印QRCode</span></span><br><span class="line">       esc.addPrintAndLineFeed();</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* 打印文字 */</span></span><br><span class="line">       esc.addSelectJustification(ReceiptCommand.JUSTIFICATION.CENTER);<span class="comment">// 设置打印左对齐</span></span><br><span class="line">       esc.addText(<span class="string">"Completed!\r\n"</span>); <span class="comment">// 打印结束</span></span><br><span class="line">       esc.addPrintAndFeedLines((<span class="keyword">byte</span>) <span class="number">8</span>);</span><br><span class="line">       Vector&lt;Byte&gt; vector = esc.getCommand();</span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">byte</span>[] data = getData(vector);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           mService.sendReceiptCommand(mPrinterId, data);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">byte</span>[] getData(Vector&lt;Byte&gt; vector) &#123;</span><br><span class="line">       <span class="keyword">int</span> length = vector.size();</span><br><span class="line">       <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[length];</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">           bytes[i] = vector.get(i);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> bytes;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/page_img/receipt.png" alt="pic" title="Receipt Sample"><br><br></p>
<h3 id="打印标签的小例子">打印标签的小例子</h3><p>该库的<strong>LabelCommand</strong>类封装了常用的标签命令，你可以使用它来打印出丰富的格式<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printLabelSample</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LabelCommand tsc = <span class="keyword">new</span> LabelCommand();</span><br><span class="line">    tsc.addSize(<span class="number">60</span>, <span class="number">60</span>); <span class="comment">// 设置标签尺寸，按照实际尺寸设置</span></span><br><span class="line">    tsc.addGap(<span class="number">0</span>); <span class="comment">// 设置标签间隙，按照实际尺寸设置，如果为无间隙纸则设置为0</span></span><br><span class="line">    tsc.addDirection(LabelCommand.DIRECTION.BACKWARD, LabelCommand.MIRROR.NORMAL);<span class="comment">// 设置打印方向</span></span><br><span class="line">    tsc.addReference(<span class="number">0</span>, <span class="number">0</span>);<span class="comment">// 设置原点坐标</span></span><br><span class="line">    tsc.addTear(LabelCommand.ENABLE.ON); <span class="comment">// 撕纸模式开启</span></span><br><span class="line">    tsc.addCls();<span class="comment">// 清除打印缓冲区</span></span><br><span class="line">    <span class="comment">// 绘制简体中文</span></span><br><span class="line">    tsc.addText(<span class="number">20</span>, <span class="number">20</span>, LabelCommand.FONTTYPE.SIMPLIFIED_CHINESE, LabelCommand.ROTATION.ROTATION_0, LabelCommand</span><br><span class="line">                    .FONTMUL.MUL_1, LabelCommand.FONTMUL.MUL_1,</span><br><span class="line">            <span class="string">"Welcome to use Gprinter!"</span>);</span><br><span class="line">    <span class="comment">// 绘制图片 -&gt; 建议放在一个任务线程去执行，图片处理比较耗时</span></span><br><span class="line">    Bitmap b = BitmapFactory.decodeResource(getResources(), R.mipmap.flower);</span><br><span class="line">    tsc.addBitmap(<span class="number">20</span>, <span class="number">50</span>, LabelCommand.BITMAP_MODE.OVERWRITE, <span class="number">200</span>, b);</span><br><span class="line"></span><br><span class="line">    tsc.addQRCode(<span class="number">250</span>, <span class="number">80</span>, LabelCommand.EEC.LEVEL_L, <span class="number">5</span>, LabelCommand.ROTATION.ROTATION_0, <span class="string">" www.gainscha.cn"</span>);</span><br><span class="line">    <span class="comment">// 绘制一维条码</span></span><br><span class="line">    tsc.add1DBarcode(<span class="number">20</span>, <span class="number">250</span>, LabelCommand.BARCODETYPE.CODE128, <span class="number">100</span>, LabelCommand.READABEL.EANBEL, LabelCommand</span><br><span class="line">            .ROTATION.ROTATION_0, <span class="string">"Gprinter"</span>);</span><br><span class="line">    tsc.addPrint(<span class="number">1</span>, <span class="number">1</span>); <span class="comment">// 打印标签</span></span><br><span class="line">    tsc.addSound(<span class="number">2</span>, <span class="number">100</span>); <span class="comment">// 打印标签后 蜂鸣器响</span></span><br><span class="line">    Vector&lt;Byte&gt; vector = tsc.getCommand();</span><br><span class="line">    <span class="keyword">byte</span>[] data = getData(vector);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        mService.sendReceiptCommand(mPrinterId, data);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/page_img/label.png" alt="pic" title="Label Sample"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="起因">起因</h3><p>半年前，接手了公司的打印机的sdk，用起来非常的复杂，而且有的地方返回值不正确，阻塞UI线程等，于是乎就挖了一个坑，要重新撸一个，半年后终于填了。。。</p>
<h3 id="导入jar包">导入jar包</h3><p>先导入jar包，]]>
    </summary>
    
      <category term="android" scheme="http://fycsb.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android写内部存储权限的问题]]></title>
    <link href="http://fycsb.github.io/2016/03/28/android_denied_permission/"/>
    <id>http://fycsb.github.io/2016/03/28/android_denied_permission/</id>
    <published>2016-03-28T12:40:24.650Z</published>
    <updated>2016-03-28T12:40:24.650Z</updated>
    <content type="html"><![CDATA[<p>今天在一部平板上面运行程序的时候，往/data/data/package/files目录（即getFilesDir()方法）下写文件的时候，总是抛出Denied Permission的异常，很明显这是权限的问题。但是我查看了AndroidManifest.xml文件，下面添加了<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="property">name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<p>这个权限了。查阅了一下官方的文档，内容如下：</p>
<blockquote>
<p>要向外部存储写入信息，您必须在您的宣示说明文件中请求 WRITE_EXTERNAL_STORAGE 权限。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">manifest</span> <span class="attribute">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>注意： 目前，所有应用都可以读取外部存储，而无需特别的权限。 但这在将来版本中会进行更改。如果您的应用需要读取外部存储（但不向其写入信息），那么您将需要声明 READ_EXTERNAL_STORAGE 权限。 要确保您的应用继续正常工作，您应在更改生效前声明此权限。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">manifest</span> <span class="attribute">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.READ_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>但是，如果您的应用使用 WRITE_EXTERNAL_STORAGE 权限，那么它也隐含读取外部存储的权限。</p>
<h5 id="您无需任何权限，即可在内部存储中保存文件。_您的应用始终具有在其内部存储目录中进行读写的权限。">您无需任何权限，即可在内部存储中保存文件。 您的应用始终具有在其内部存储目录中进行读写的权限。</h5></blockquote>
<p>后来想起之前似乎有一个权限是关于内部存储的<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="property">name</span>=<span class="string">"android.permission.WRITE_INTERNAL_STORAGE"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>然后死马当活马医，就顺利运行了。其实还是要怪那部定制过的平板…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天在一部平板上面运行程序的时候，往/data/data/package/files目录（即getFilesDir()方法）下写文件的时候，总是抛出Denied Permission的异常，很明显这是权限的问题。但是我查看了AndroidManifest.xml文件，下面添]]>
    </summary>
    
      <category term="android" scheme="http://fycsb.github.io/tags/android/"/>
    
  </entry>
  
</feed>
